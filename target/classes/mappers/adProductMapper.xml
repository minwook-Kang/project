<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.minmall.mappers.AdProductMapper">

	<!-- 1차카테고리 출력 코드를 null 처리 -->
	<select id="mainCGList" resultType="CategoryVO">
		select cate_code, cate_prtcode, cate_name 
		from category_tbl
		where cate_prtcode is null
	</select>

	<!-- 1차 카테고리에 해당하는 2차 카테고리 출력 -->
	<select id="subCGList" parameterType="string" resultType="CategoryVO">
		select cate_code, cate_prtcode, cate_name 
		from category_tbl
		where cate_prtcode = #{cate_code}
	</select>
	
	<!-- 상품 리스트 -->
	<select id="searchListProduct" parameterType="SearchCriteria" resultType="ProductVO">
		select pro_num, cate_code, pro_name, pro_price, pro_discount, pro_company,
			   pro_contents, pro_img, pro_amount, pro_buy, pro_date, pro_update
		from (select pro_num, cate_code, pro_name, pro_price, pro_discount, pro_company,
			   		 pro_contents, pro_img, pro_amount, pro_buy, pro_date, pro_update,
			   		 row_number() over (order by pro_num desc) p_seq from product_tbl
			   		 <include refid="search" />)
		where p_seq between #{rowStart} and #{rowEnd}
	</select>
	
	<!-- 상품 개수 -->
	<select id="searchListCount" parameterType="SearchCriteria" resultType="int">
			select count(pro_num)
			from product_tbl
		<include refid="search" />
	</select>
	
	<!-- 상품 추가 -->
	<insert id="insertProduct" parameterType="productVO">
		insert into product_tbl(pro_num, cate_code, cate_prtcode, pro_name,
								pro_price, pro_discount, pro_company, pro_contents,
								pro_img, pro_amount, pro_buy, pro_date)
		values(seq_pro_num.NEXTVAL, #{cate_code}, #{cate_prtcode}, #{pro_name}, 
								#{pro_price}, #{pro_discount}, #{pro_company}, #{pro_contents},
								#{pro_img}, #{pro_amount}, #{pro_buy}, sysdate)
	
	</insert>

	<!-- 검색 조건  -->
	<sql id="search">
		<if test="searchType != null">
			<!-- 상품명 -->
			<if test="searchType == 'name'.toString()"> 
				where pro_name like '%' || #{keyword} || '%'
			</if>
			<!-- 내용 -->
			<if test="searchType == 'contents'.toString()"> 
				where pro_contents like '%' || #{keyword} || '%'
			</if>
			<!-- 제조사 -->
			<if test="searchType == 'company'.toString()"> 
				where pro_company like '%' || #{keyword} || '%'
			</if>
			<!-- 상품명 + 내용 -->
			<if test="searchType == 'name_contents'.toString()"> 
				where (pro_name like '%' || #{keyword} || '%')
				or (pro_contents like '%' || #{keyword} || '%')
			</if>
			<!-- 상품명 + 제조사 -->
			<if test="searchType == 'name_company'.toString()"> 
				where (pro_name like '%' || #{keyword} || '%')
				or (pro_company like '%' || #{keyword} || '%')
			</if>
			<!-- 상품명 + 내용 + 제조사 -->
			<if test="searchType == 'all'.toString()"> 
				where (pro_name like '%' || #{keyword} || '%')
				or (pro_contents like '%' || #{keyword} || '%')
				or (pro_company like '%' || #{keyword} || '%')
			</if>
		</if>
	</sql>

	
	<!-- 상품 정보 읽기 -->
	<select id="readProduct" parameterType="int" resultType="productVO">
		select p.pro_num, p.cate_code, c.cate_prtcode, p.pro_name, p.pro_price, p.pro_discount,
			   p.pro_company, p.pro_contents, p.pro_img, p.pro_amount, p.pro_buy,p.pro_date, p.pro_update
		from product_tbl p inner join category_tbl c
		on p.cate_code = c.cate_code
		where p.pro_num = #{pro_num}
	</select>
	
	<!-- 상품 수정 -->
	<update id="editProduct" parameterType="ProductVO">
		update product_tbl
		set cate_code=#{cate_code}, pro_name=#{pro_name}, pro_price=#{pro_price},
			pro_discount=#{pro_discount}, pro_company=#{pro_company}, 
			pro_contents=#{pro_contents}, pro_img=#{pro_img}, pro_amount=#{pro_amount}, 
			pro_buy=#{pro_buy}, pro_update=sysdate
		where pro_num = #{pro_num}
	</update>
	
	<!-- 상품 삭제 -->
	<delete id="deleteProduct" parameterType="int">
		delete product_tbl
		where pro_num = #{pro_num}
	</delete>
	
	<!-- 선택한 상품 수정 -->
	<!-- java.util.Map -->
	<update id="editChecked" parameterType="Map">
		update product_tbl
		set pro_amount=#{pro_amount}, pro_buy=#{pro_buy}, pro_update=sysdate
		where pro_num=#{pro_num}
	</update>
	
</mapper>