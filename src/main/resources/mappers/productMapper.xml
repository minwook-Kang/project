<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.minmall.mappers.ProductMapper">

	<!-- 1차 카테고리 출력 -->
	<select id="mainCGList" resultType="CategoryVO">
		select cate_code, cate_prtcode, cate_name
		from category_tbl
		where cate_prtcode is null
	</select>
	
	<!-- 2차 카테고리 출력 -->
	<select id="subCGList" parameterType="string" resultType="CategoryVO">
		select cate_code, cate_prtcode, cate_name
		from category_tbl
		where cate_prtcode = #{cate_code}
	</select>
	
	<!-- 카테고리 코드에 해당하는 카테고리명 -->
	<select id="getCGName" parameterType="string" resultType="string">
		select cate_name
		from category_tbl
		where cate_code = #{cate_code}
	</select>
	
	<!-- 상품 전체리스트(홈) -->
	<select id="productList" parameterType="Criteria" resultType="ProductVO">
		select pro_num, cate_code, pro_name, pro_price, pro_discount, 
			   pro_company, pro_contents, pro_img, pro_amount, pro_buy, 
			   pro_date, pro_update
		from	(select pro_num, cate_code, pro_name, pro_price, pro_discount, 
						pro_company, pro_contents, pro_img, pro_amount, pro_buy, 
						pro_date, pro_update, row_number() over(order by pro_num desc) p_seq
				from product_tbl)
		 where p_seq between #{rowStart} and #{rowEnd} 	
	</select>
	
	<!-- 상품 전체개수 -->
	<select id="productCountAll" parameterType="string" resultType="int">
		select count(pro_num)
		from product_tbl
	</select>
	
	<!-- 해당 카테고리에 해당하는 상품리스트(페이지에 맞춰서) -->
	<select id="productListCG" parameterType="Map" resultType="ProductVO">
		select pro_num, cate_code, pro_name, pro_price, pro_discount, 
			   pro_company, pro_contents, pro_img, pro_amount, pro_buy, 
			   pro_date, pro_update
		from	(select pro_num, cate_code, pro_name, pro_price, pro_discount, 
						pro_company, pro_contents, pro_img, pro_amount, pro_buy, 
						pro_date, pro_update, row_number() over(order by pro_num desc) p_seq
				from product_tbl
				where cate_code=#{cate_code})
		 where p_seq between #{rowStart} and #{rowEnd} 	
	</select>
	
	<!-- 해당 카테고리의 상품 개수  -->
	<select id="productCount" parameterType="string" resultType="int">
		select count(pro_num)
		from product_tbl
		where cate_code = #{cate_code}
	</select>
	
	
	<!-- 해당 검색조건에 해당하는 상품리스트(페이지에 맞춰서) -->
	<select id="productListSearch" parameterType="SearchCriteria" resultType="ProductVO">
		select pro_num, cate_code, pro_name, pro_price, pro_discount, 
				pro_company, pro_contents, pro_img, pro_amount, pro_buy, 
				pro_date, pro_update
		from	(select pro_num, cate_code, pro_name, pro_price, pro_discount, 
					pro_company, pro_contents, pro_img, pro_amount, pro_buy, 
					pro_date, pro_update, row_number() over(order by pro_num desc) p_seq
				from product_tbl
				where (pro_name like '%' || #{keyword} || '%')
				or (pro_contents like '%' || #{keyword} || '%')
				)
		 where p_seq between #{rowStart} and #{rowEnd} 
	</select>
	
	<!-- 해당 검색조건에 해당하는  상품 개수  -->
	<select id="productSearchCount" parameterType="string" resultType="int">
		select count(pro_num)
		from product_tbl
		where (pro_name like '%' || #{keyword} || '%')
			 or (pro_contents like '%' || #{keyword} || '%')
	</select>
	
	<!-- 상품 상세정보 읽기 -->
	<select id="readProduct" parameterType="int" resultType="productVO">
		select pro_num, cate_code, pro_name, pro_price, pro_discount, 
				pro_company, pro_contents, pro_img, pro_amount, pro_buy, 
				pro_date, pro_update
		 from product_tbl
		 where pro_num=#{pro_num}
	</select>
</mapper>